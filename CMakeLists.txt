CMAKE_MINIMUM_REQUIRED(VERSION 3.8)

PROJECT(logr)

SET(CMAKE_CXX_STANDARD 11)
set(CMAKE_C_STANDARD 99)

SET(CMAKE_CXX_FLAGS_RELEASE "${CMAKE_CXX_FLAGS_RELEASE} -Wall -O2")
SET(CMAKE_EXE_LINKER_FLAGS "-static-libgcc -static-libstdc++ -Wl,--wrap=memcpy")
SET(CMAKE_VERBOSE_MAKEFILE ON)

LIST(APPEND CMAKE_MODULE_PATH ${CMAKE_SOURCE_DIR})

IF (MSVC)
    SET(ADDITIONAL_COMPILER_FLAGS "/W3")
    SET(CMAKE_CXX_FLAGS "${CMAKE_CXX_FLAGS} ${ADDITIONAL_COMPILER_FLAGS}")
ENDIF ()

ADD_DEFINITIONS(-D_GNU_SOURCE)



SET(OUTPUT_DIR ${CMAKE_CURRENT_BINARY_DIR})
SET(OUTPUT_DIR ${PROJECT_SOURCE_DIR}/parser)

# bion 语法分析
FIND_PACKAGE(BISON REQUIRED)
SET(BisonOutput ${OUTPUT_DIR}/bison.c)
IF(NOT BISON_FOUND)
    MESSAGE(FATAL_ERROR "bison does not found")
ENDIF()
BISON_TARGET(Parser parser/logr.y ${BisonOutput})

# flex 词法分析
FIND_PACKAGE(FLEX REQUIRED)
IF(NOT FLEX_FOUND)
    MESSAGE(FATAL_ERROR "flex does not found")
ENDIF()
SET(FlexOutput ${OUTPUT_DIR}/app.c)
FLEX_TARGET(APP_Scanner parser/app.l ${FlexOutput})
ADD_FLEX_BISON_DEPENDENCY(APP_Scanner Parser)
ADD_EXECUTABLE(flex-app
        lib/memcpy.c
        ${BISON_Parser_OUTPUTS}
        ${FLEX_APP_Scanner_OUTPUTS}
        )


INCLUDE_DIRECTORIES(
        lib/
        src/
        parser/
)

FILE(GLOB_RECURSE DIR_SRCS lib/*.c src/**.c)
FILE(GLOB_RECURSE DIR_HEADERS lib/*.h src/**.h)

ADD_EXECUTABLE(${PROJECT_NAME}
        ${DIR_SRCS}
#        ${BISON_Parser_OUTPUTS}
#        ${FLEX_Scanner_OUTPUTS}
        )

#SET_TARGET_PROPERTIES(${PROJECT_NAME}
#        PROPERTIES
#        ARCHIVE_OUTPUT_DIRECTORY "${CMAKE_BINARY_DIR}/bin"
#        LIBRARY_OUTPUT_DIRECTORY "${CMAKE_BINARY_DIR}/bin"
#        RUNTIME_OUTPUT_DIRECTORY "${CMAKE_BINARY_DIR}/bin"
#        )

TARGET_LINK_LIBRARIES(${PROJECT_NAME} m)
