CMAKE_MINIMUM_REQUIRED(VERSION 3.8)

PROJECT(logr)

SET(CMAKE_CXX_STANDARD 11)

SET(CMAKE_CXX_FLAGS_RELEASE "${CMAKE_CXX_FLAGS_RELEASE} -Wall -O2")
SET(CMAKE_EXE_LINKER_FLAGS "-static-libgcc -static-libstdc++ -Wl,--wrap=memcpy")
SET(CMAKE_VERBOSE_MAKEFILE ON)

LIST(APPEND CMAKE_MODULE_PATH ${CMAKE_SOURCE_DIR})
IF (CMAKE_BUILD_TYPE MATCHES DEBUG)
    ADD_DEFINITIONS(-DZEND_DEBUG=1)
ELSE ()
    ADD_DEFINITIONS(-DZEND_DEBUG=0)
ENDIF ()


ADD_DEFINITIONS(-D_MSC_STDINT_H_)
ADD_DEFINITIONS(-D_CRT_SECURE_NO_WARNINGS)
ADD_DEFINITIONS(-DBUILDING_PHPCPP)

IF (MSVC)
    SET(ADDITIONAL_COMPILER_FLAGS "/W3")
    SET(CMAKE_CXX_FLAGS "${CMAKE_CXX_FLAGS} ${ADDITIONAL_COMPILER_FLAGS}")
ENDIF ()

INCLUDE_DIRECTORIES(
        include/
)

AUX_SOURCE_DIRECTORY(src DIR_SRCS)

SET(Sources
        ${DIR_SRCS}
        )

ADD_EXECUTABLE(${PROJECT_NAME} ${Sources})

#SET_TARGET_PROPERTIES(${PROJECT_NAME}
#        PROPERTIES
#        ARCHIVE_OUTPUT_DIRECTORY "${CMAKE_BINARY_DIR}/bin"
#        LIBRARY_OUTPUT_DIRECTORY "${CMAKE_BINARY_DIR}/bin"
#        RUNTIME_OUTPUT_DIRECTORY "${CMAKE_BINARY_DIR}/bin"
#        )

TARGET_LINK_LIBRARIES(${PROJECT_NAME} m)
